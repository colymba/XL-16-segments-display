int sdiPin = 2;
int clkPin = 5;
int lePin = 4;
int oePin = 3;

//int sdoPin = 6;

int glyph = -1;
int counter = 0;

byte incomingByte;

//byte alpha[][16] = { 
byte alpha[] = { 
// UPPER CASE ALPHABET
{ "A", {0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0} },// 0 = A 
{ "B", {1,1,0,1,0,0,0,0,0,1,0,1,1,1,1,1} },// 1 = B 
{ "C", {1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1} },// 2 = C 
{ "D", {1,0,0,0,1,0,0,1,0,0,0,0,1,1,0,1} },// 3 = D 
{ "E", {1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1} },// 4 = E 
{ "F", {0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0} },// 5 = F 
{ "G", {1,1,0,1,0,0,0,0,0,0,1,1,1,1,0,1} },// 6 = G 
{ "H", {0,1,0,1,0,0,0,0,1,0,0,0,1,1,1,0} },// 7 = H 
{ "I", {1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,1} },// 8 = I 
{ "J", {0,0,0,0,0,0,1,0,0,1,1,1,0,1,0,1} },// 9 = J 
{ "K", {0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0} },// 10 = K 
{ "L", {1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1} },// 11 = L 
{ "M", {0,0,0,1,0,1,0,1,1,0,0,0,1,1,0,0} },// 12 = M 
{ "N", {0,0,0,1,1,0,0,1,1,0,0,0,1,1,0,0} },// 13 = N 
{ "O", {1,0,0,1,0,0,0,0,1,0,1,1,1,1,0,1} },// 14 = O 
{ "P", {0,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0} },// 15 = P 
{ "Q", {1,0,0,1,1,0,0,0,1,0,1,1,1,1,0,1} },// 16 = Q 
{ "R", {0,1,0,0,1,0,0,0,1,0,1,1,1,1,1,0} },// 17 = R 
{ "S", {1,1,0,1,0,0,0,0,0,0,1,1,1,0,1,1} },// 18 = S 
{ "T", {0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0} },// 19 = T
{ "U", {1,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1} },// 20 = U
{ "V", {0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0} },// 21 = V
{ "W", {0,0,1,1,1,0,0,0,1,0,0,0,1,1,0,0} },// 22 = W
{ "X", {0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0} },// 23 = X
{ "Y", {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0} },// 24 = Y
{ "Z", {1,0,1,0,0,1,0,0,0,0,1,1,0,0,0,1} },// 25 = Z 
// lower case alphabet
{ "a", {0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1} },// 26 = a
{ "", {1,1,0,1,0,0,0,0,0,0,0,0,1,1,1,1} },// 27 = b
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1} },// 28 = c
{ "", {1,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1} },// 29 = d
{ "", {0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1} },// 30 = e
{ "", {0,1,0,0,0,0,1,0,0,1,1,0,0,0,1,0} },// 31 = f
{ "", {1,1,0,1,0,0,0,0,1,1,1,0,0,1,0,1} },// 32 = g
{ "", {0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0} },// 33 = h
{ "", {0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0} },// 34 = i
{ "", {0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,1} },// 35 = j
{ "", {0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0} },// 36 = k
{ "", {0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0} },// 37 = l
{ "", {0,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0} },// 38 = m
{ "", {0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0} },// 39 = n
{ "", {1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0} },// 40 = 0
{ "", {0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,0} },// 41 = p
{ "", {0,1,0,1,0,0,0,0,1,1,1,0,0,0,0,0} },// 42 = q
{ "", {0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0} },// 43 = r
{ "", {1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0} },// 44 = s
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1} },// 45 = t
{ "", {0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1} },// 46 = u
{ "", {0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0} },// 47 = v
{ "", {0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0} },// 48 = w
{ "", {1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,1} },// 49 = x
{ "", {1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0} },// 50 = y
{ "", {0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1} },// 51 = z
// punctuation and special char
{ "", {0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1} },// 52 = &
{ "", {0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0} },// 53 = " (left)
{ "", {0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0} },// 54 = " (right)
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0} },// 55 = ' (left)
{ "", {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0} },// 56 = ' (right)
{ "", {0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0} },// 57 = (
{ "", {0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0} },// 58 = )
{ "", {0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0} },// 59 = \
{ "", {0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0} },// 60 = /
{ "", {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1} },// 61 = <
{ "", {1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0} },// 62 = >
{ "", {0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0} },// 63 = |
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0} },// 64 = -
{ "", {0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0} },// 65 = --
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1} },// 66 = _
{ "", {1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1} },// 67 = =
{ "", {0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0} },// 68 = +
{ "", {0,1,1,0,1,1,1,1,0,1,0,0,0,0,1,0} },// 69 = *
{ "", {1,1,1,1,0,1,1,0,0,1,0,1,1,0,1,0} },// 70 = %
{ "", {1,0,0,0,1,0,1,1,0,1,1,1,0,0,0,1} },// 71 = $
{ "", {1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1} },// 72 = ????
{ "", {0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1} },// 73 = ????
{ "", {1,1,0,1,0,0,1,0,1,0,1,1,1,1,0,0} },// 74 = @
{ "", {0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0} },// 75 = ?
{ "", {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0} },// 76 = !
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1} },// 77 = .
{ "", {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0} },// 78 = ,
{ "", {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1} },// 79 = ;
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1} },// 80 = :
// figures
{ "", {1,0,1,1,0,1,0,0,1,0,1,1,1,1,0,1} },// 81 = 0
{ "", {0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0} },// 82 = 1
{ "", {1,0,1,1,0,1,0,1,0,0,1,1,0,0,0,1} },// 83 = 2
{ "", {1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,1} },// 84 = 3
{ "", {0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,0} },// 85 = 4
{ "", {1,1,0,1,0,0,0,1,0,0,1,1,0,0,0,1} },// 86 = 5
{ "", {1,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1} },// 87 = 6
{ "", {0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0} },// 88 = 7
{ "", {1,1,0,1,0,0,0,0,1,0,1,1,1,1,1,1} },// 89 = 8
{ "", {1,1,0,1,0,0,0,0,1,0,1,1,1,0,1,0} },// 90 = 9
// alternate
{ "", {1,1,0,1,0,0,0,0,1,0,1,1,0,1,1,1} },// 91 = a
{ "", {1,1,1,1,0,0,0,0,1,0,1,0,0,0,0,1} },// 92 = A
{ "", {1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1} },// 93 = e
{ "", {0,0,1,0,0,1,0,0,0,0,1,1,1,1,0,1} }// 94 = E
/* * * * * * * * * * *   *   *  
 0 1 2 3 4 5 6 7 8 9 10  12  14 
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} */
};
byte alpha[] = { 
// UPPER CASE ALPHABET
{ "A", {0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0} },// 0 = A 
{ "B", {1,1,0,1,0,0,0,0,0,1,0,1,1,1,1,1} },// 1 = B 
{ "C", {1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1} },// 2 = C 
{ "D", {1,0,0,0,1,0,0,1,0,0,0,0,1,1,0,1} },// 3 = D 
{ "E", {1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1} },// 4 = E 
{ "F", {0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0} },// 5 = F 
{ "G", {1,1,0,1,0,0,0,0,0,0,1,1,1,1,0,1} },// 6 = G 
{ "H", {0,1,0,1,0,0,0,0,1,0,0,0,1,1,1,0} },// 7 = H 
{ "I", {1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,1} },// 8 = I 
{ "J", {0,0,0,0,0,0,1,0,0,1,1,1,0,1,0,1} },// 9 = J 
{ "K", {0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0} },// 10 = K 
{ "L", {1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1} },// 11 = L 
{ "M", {0,0,0,1,0,1,0,1,1,0,0,0,1,1,0,0} },// 12 = M 
{ "N", {0,0,0,1,1,0,0,1,1,0,0,0,1,1,0,0} },// 13 = N 
{ "O", {1,0,0,1,0,0,0,0,1,0,1,1,1,1,0,1} },// 14 = O 
{ "P", {0,1,0,0,0,0,0,0,1,0,1,1,1,1,1,0} },// 15 = P 
{ "Q", {1,0,0,1,1,0,0,0,1,0,1,1,1,1,0,1} },// 16 = Q 
{ "R", {0,1,0,0,1,0,0,0,1,0,1,1,1,1,1,0} },// 17 = R 
{ "S", {1,1,0,1,0,0,0,0,0,0,1,1,1,0,1,1} },// 18 = S 
{ "T", {0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0} },// 19 = T
{ "U", {1,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1} },// 20 = U
{ "V", {0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0} },// 21 = V
{ "W", {0,0,1,1,1,0,0,0,1,0,0,0,1,1,0,0} },// 22 = W
{ "X", {0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0} },// 23 = X
{ "Y", {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0} },// 24 = Y
{ "Z", {1,0,1,0,0,1,0,0,0,0,1,1,0,0,0,1} },// 25 = Z 
// lower case alphabet
{ "a", {0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1} },// 26 = a
{ "", {1,1,0,1,0,0,0,0,0,0,0,0,1,1,1,1} },// 27 = b
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1} },// 28 = c
{ "", {1,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1} },// 29 = d
{ "", {0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1} },// 30 = e
{ "", {0,1,0,0,0,0,1,0,0,1,1,0,0,0,1,0} },// 31 = f
{ "", {1,1,0,1,0,0,0,0,1,1,1,0,0,1,0,1} },// 32 = g
{ "", {0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0} },// 33 = h
{ "", {0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0} },// 34 = i
{ "", {0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,1} },// 35 = j
{ "", {0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0} },// 36 = k
{ "", {0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0} },// 37 = l
{ "", {0,1,0,1,0,0,1,0,0,0,0,0,0,1,1,0} },// 38 = m
{ "", {0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0} },// 39 = n
{ "", {1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0} },// 40 = 0
{ "", {0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,0} },// 41 = p
{ "", {0,1,0,1,0,0,0,0,1,1,1,0,0,0,0,0} },// 42 = q
{ "", {0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0} },// 43 = r
{ "", {1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0} },// 44 = s
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1} },// 45 = t
{ "", {0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1} },// 46 = u
{ "", {0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0} },// 47 = v
{ "", {0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0} },// 48 = w
{ "", {1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,1} },// 49 = x
{ "", {1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0} },// 50 = y
{ "", {0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1} },// 51 = z
// punctuation and special char
{ "", {0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1} },// 52 = &
{ "", {0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0} },// 53 = " (left)
{ "", {0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0} },// 54 = " (right)
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0} },// 55 = ' (left)
{ "", {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0} },// 56 = ' (right)
{ "", {0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0} },// 57 = (
{ "", {0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0} },// 58 = )
{ "", {0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0} },// 59 = \
{ "", {0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0} },// 60 = /
{ "", {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1} },// 61 = <
{ "", {1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0} },// 62 = >
{ "", {0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0} },// 63 = |
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0} },// 64 = -
{ "", {0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0} },// 65 = --
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1} },// 66 = _
{ "", {1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1} },// 67 = =
{ "", {0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0} },// 68 = +
{ "", {0,1,1,0,1,1,1,1,0,1,0,0,0,0,1,0} },// 69 = *
{ "", {1,1,1,1,0,1,1,0,0,1,0,1,1,0,1,0} },// 70 = %
{ "", {1,0,0,0,1,0,1,1,0,1,1,1,0,0,0,1} },// 71 = $
{ "", {1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1} },// 72 = ????
{ "", {0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1} },// 73 = ????
{ "", {1,1,0,1,0,0,1,0,1,0,1,1,1,1,0,0} },// 74 = @
{ "", {0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0} },// 75 = ?
{ "", {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0} },// 76 = !
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1} },// 77 = .
{ "", {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0} },// 78 = ,
{ "", {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1} },// 79 = ;
{ "", {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1} },// 80 = :
// figures
{ "", {1,0,1,1,0,1,0,0,1,0,1,1,1,1,0,1} },// 81 = 0
{ "", {0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0} },// 82 = 1
{ "", {1,0,1,1,0,1,0,1,0,0,1,1,0,0,0,1} },// 83 = 2
{ "", {1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,1} },// 84 = 3
{ "", {0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,0} },// 85 = 4
{ "", {1,1,0,1,0,0,0,1,0,0,1,1,0,0,0,1} },// 86 = 5
{ "", {1,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1} },// 87 = 6
{ "", {0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0} },// 88 = 7
{ "", {1,1,0,1,0,0,0,0,1,0,1,1,1,1,1,1} },// 89 = 8
{ "", {1,1,0,1,0,0,0,0,1,0,1,1,1,0,1,0} },// 90 = 9
// alternate
{ "", {1,1,0,1,0,0,0,0,1,0,1,1,0,1,1,1} },// 91 = a
{ "", {1,1,1,1,0,0,0,0,1,0,1,0,0,0,0,1} },// 92 = A
{ "", {1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1} },// 93 = e
{ "", {0,0,1,0,0,1,0,0,0,0,1,1,1,1,0,1} }// 94 = E
/* * * * * * * * * * *   *   *  
 0 1 2 3 4 5 6 7 8 9 10  12  14 
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} */
};
//-----------------------------------------
void setup()
{  
  Serial.begin(9600);
  Serial.println("- setup -");
  
  pinMode(sdiPin, OUTPUT);
  pinMode(clkPin, OUTPUT);
  pinMode(lePin, OUTPUT);
  pinMode(oePin, OUTPUT); 
  
  //pinMode(sdoPin, INPUT); 
    
  digitalWrite(sdiPin, LOW);
  digitalWrite(clkPin, LOW);
  digitalWrite(lePin, LOW);
  //digitalWrite(oePin, HIGH);   
  digitalWrite(oePin, LOW);   
  
  randomSeed(analogRead(0));
}
//-----------------------------------------
void loop()
{  
  //randomSeed(analogRead(0));
  
  //glyph = 73;
  Serial.print("Glyph #");
  Serial.print(glyph); 
  Serial.print(" = ");
  Serial.println(alpha[glyph][0]); 
  
  
  Serial.println("- Send Data -");    
  
  digitalWrite(clkPin, LOW);
  
  delayMicroseconds(8); // Tsetup_D //
  for(int i = 0; i < 16; i++)
  {           
    digitalWrite(sdiPin, alpha[glyph][1][i]); // data out - SDI
        delayMicroseconds(8); // Tsetup_D 
    digitalWrite(clkPin, HIGH);       
        delayMicroseconds(13); // Twclk + Thold ---> 10+3
                
    if (i != 15) digitalWrite(clkPin, LOW);
    //digitalWrite(clkPin, LOW);      
  }  
 
  //--  
  Serial.println("- Enable -");
  delay(5); // Tsetup_L
  //--
  digitalWrite(lePin, HIGH); 
  delayMicroseconds(10); // Twlat      
  digitalWrite(lePin, LOW);    
  //--
  delayMicroseconds(500); // Tsetup_3  
  
  if ( counter % 1 == 0 )
  {         
    //digitalWrite(oePin, LOW);       
    
    Serial.println("- Wait -");
    delay(4000); // display time   
      
    
    
    //glyph++;
    if ( glyph > 100 ) { glyph = 0; }  
       
    
    glyph = random(52, 81);
    
    counter = 0;    
    //digitalWrite(oePin, HIGH);
  }  
  counter++;
  /*
  if (Serial.available() > 0)
  {           
    glyph = 0;
    for (int i = Serial.available(); i > 0; i--)
    { 
      incomingByte = Serial.read();      
      glyph += (int(incomingByte)-48) * pow(10, i-1);         
    }
    Serial.print("Received: ");
    Serial.println(incomingByte, DEC);
    Serial.print("Display: ");
    Serial.println(glyph, DEC);
  }
  */
  
  Serial.println("###################################");
}





